# -- Apply default settings for mandatory fields (if not set)

# set syslog @level (if @level is not set yet)
if ![@level] and [syslog_severity_code] { # @level

    if [syslog_severity_code] <= 3 { # 0-Emergency, 1-Alert, 2-Critical, 3-Error
        mutate {
          add_field => { "@level" => "ERROR" }
        }
    } else if [syslog_severity_code] <= 5 { # 4-Warning, 5-Notice
        mutate {
          add_field => { "@level" => "WARN" }
        }
    } else if [syslog_severity_code] == 6 { # 6-Informational
        mutate {
          add_field => { "@level" => "INFO" }
        }
    } else if [syslog_severity_code] == 7 { #7-Debug
        mutate {
          add_field => { "@level" => "DEBUG" }
        }
    }
}

# -- Rework fields

# @source fields
if ![@source][name] and ([@source][job] and [@source][instance]) {
  mutate { add_field => { "[@source][name]" => "%{[@source][job]}/%{[@source][instance]}" } }
}

mutate { convert => { "[@source][instance]" => "integer" } }

if ![@source][host] {
  mutate { rename => { "[host]" => "[@source][host]" } }
}

# dynamic [parsed_json_data] field
# store [parsed_json_data] to calculated field name (get @source.component downcase it and replace special characters with '_')
if [parsed_json_data] and [@source][component] {
  mutate {
    add_field => { "json_field_name" => "%{[@source][component]}"}
  }
  mutate {
    gsub => [ "json_field_name", "[\s/\\?#-\.]", "_" ]
  }
  ruby {
    code => "event[event['json_field_name'].to_s.downcase] = LogStash::Util.normalize(event['parsed_json_data'])"
    remove_field => [ "json_field_name", "parsed_json_data" ]
  }
}

# -- Cleanup unnecessary fields

# Remove syslog_ fields
mutate {      
  remove_field => "syslog_pri"
  remove_field => "syslog_facility"
  remove_field => "syslog_facility_code"
  remove_field => "syslog_message"
  remove_field => "syslog_severity"
  remove_field => "syslog_severity_code"
  remove_field => "syslog_program"
  remove_field => "syslog_timestamp"
  remove_field => "syslog_hostname"
  remove_field => "syslog_pid"
}

# Cleanup
mutate {
  rename => { "[tags]" => "[@tags]" }
  uppercase => [ "@level" ]
  remove_field => [ "@version" ]
  remove_field => "host"
}
