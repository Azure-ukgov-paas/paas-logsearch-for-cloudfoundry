# ---------------------------
# Special Case - router logs |
# ---------------------------
if ( [@type] == "LogMessage" and [@source][component] == "RTR" ) {

    grok {
      match => [ "@message", "%{HOSTNAME:[rtr][hostname]} - \[(?<rtr_time>%{MONTHDAY}/%{MONTHNUM}/%{YEAR}:%{TIME} %{INT})\] \"%{WORD:[rtr][verb]} %{URIPATHPARAM:[rtr][path]} %{PROG:[rtr][http_spec]}\" %{BASE10NUM:[rtr][status]:int} %{BASE10NUM:[rtr][request_bytes_received]:int} %{BASE10NUM:[rtr][body_bytes_sent]:int} \"%{GREEDYDATA:[rtr][referer]}\" \"%{GREEDYDATA:[rtr][http_user_agent]}\" %{HOSTPORT} x_forwarded_for:\"%{GREEDYDATA:[rtr][x_forwarded_for]}\" x_forwarded_proto:\"%{GREEDYDATA:[rtr][x_forwarded_proto]}\" vcap_request_id:%{NOTSPACE:[rtr][vcap_request_id]} response_time:%{NUMBER:[rtr][response_time_sec]:float} app_id:%{NOTSPACE}%{GREEDYDATA}" ]
      add_tag => [ "rtr" ]
      tag_on_failure => [ "fail/cloudfoundry/app-rtr/grok" ]
    }

    if !("fail/cloudfoundry/app-rtr/grok" in [tags]) {

        # set @level based on HTTP status
        if [rtr][status] >= 400 {
            mutate {
              replace => { "@level" => "ERROR" }
            }
        } else {
            mutate {
              replace => { "@level" => "INFO" }
            }
        }

        # ---- RTR-specific fields

        # [rtr][timestamp]
        mutate {
          rename => { "rtr_time" => "[rtr][timestamp]" }
        }

        # [rtr][x_forwarded_for]
        mutate {
            gsub => ["[rtr][x_forwarded_for]","[\s\"]",""] # remove quotes and whitespace
            split => ["[rtr][x_forwarded_for]", ","] # format is client, proxy1, proxy2 ...
        }

        # [rtr][response_time_ms]
        ruby {
           code => "event['rtr']['response_time_ms'] = (event['rtr']['response_time_sec']*1000).to_int"
           remove_field => "response_time_sec"
        }

        # [rtr][remote_addr]
        mutate {
          add_field => ["[rtr][remote_addr]", "%{[rtr][x_forwarded_for][0]}"]
        }

        if [rtr][remote_addr] =~ /([0-9]{1,3}\.){3}[0-9]{1,3}/ {
           geoip {
             source => "[rtr][remote_addr]"
           }
        }
    }
}
